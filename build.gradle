plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.13'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.projectsugarglider'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.postgresql:postgresql:42.7.3'
	implementation 'com.opencsv:opencsv:5.7.1'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.0'
    implementation 'org.json:json:20230227'
	implementation "org.flywaydb:flyway-core:10.15.2"
	implementation "org.flywaydb:flyway-database-postgresql:10.15.2"
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'com.h2database:h2'


	
}

tasks.named('test') {
	useJUnitPlatform()
}


tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
    options.charSet  = 'UTF-8'
    options.locale   = 'ko_KR'
    options.links('https://docs.oracle.com/en/java/javase/21/docs/api/')
    options.addBooleanOption('Xdoclint:none', true)
    failOnError = false
}